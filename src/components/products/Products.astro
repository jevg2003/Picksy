---
// Products.astro
import { getProducts } from "@/services/api/products";
import { ProductCard } from "./ProductCard";
const { content: products } = await getProducts({
  size: 100,
});

// Ordenar productos por fecha de creaciÃ³n descendente
const sortedProducts = [...products].sort((a, b) => 
  new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()
);

interface Props {
  showId?: boolean;
}

const { showId = false } = Astro.props as Props;
---

<section class="py-10 w-full">
  <div class="container mx-auto px-4">
    <h2 class="text-6xl text-start mb-20">Productos</h2>
    {
      sortedProducts.length > 0 ? (
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6">
          {sortedProducts.map((product) => (
            <ProductCard
              client:only="react"
              {...product}
              {showId}
              imageLink={product.images.find((img) => img.isCover)?.link || ""}
            />
          ))}
        </div>
      ) : (
        <div class="flex flex-col items-center justify-center h-64 text-center text-gray-500">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-16 w-16 mb-4 text-gray-400"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            stroke-width="2">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M9 17v-2a4 4 0 014-4h1a4 4 0 014 4v2m-7 4h6m-3-4v4m-6-4a4 4 0 00-4-4H5a4 4 0 00-4 4v2m7 4h6m-3-4v4"
            />
          </svg>
          <p class="text-lg font-semibold">No hay productos disponibles</p>
        </div>
      )
    }
  </div>
</section>